:root {
    --bg-color: white;
    --toast-starts-from: 0;
    --primary: #0284c7;
    --secondary: #14b8a6;
}



nav {
    background-color: transparent;
    backdrop-filter: blur(8px);

    .nav-links li {

        transition: color 200ms ease-in-out;

        button,
        a {
            padding: 2px;

            :hover {
                color: var(--primary);
            }
        }

        &.active {
            color: var(--primary);
            opacity: .9;
        }
    }
}

.toast-container {
    --width: 350px;
    position: fixed;
    margin: 10px;
    margin-top: 75px;
    min-width: 200px;
    max-width: var(--width);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    z-index: 1;
    transition: height 350ms ease-in-out;

    .toast {
        display: block;
        width: 100%;
        max-width: var(--width);
        padding: 1.2rem .8rem;
        display: flex;
        justify-content: center;
        box-shadow: 0 0 5px 1px rgba($color: black, $alpha: 0.2);
        text-align: center;
        border-radius: .3rem;
        position: relative;
        overflow: hidden;
        cursor: pointer;
        margin: 0 .5rem;
        background-color: var(--bg-color);

        &.can-close::after {
            position: absolute;
            content: '';
            background: blue;
            left: 0;
            bottom: 0;
            height: 3px;
            width: calc(100% * var(--progress, 0.7));
            background: linear-gradient(to right, var(--primary), var(--secondary), var(--primary), var(--secondary), var(--primary));
            ;
        }

        &.invalid {
            background-color: rgb(253, 69, 69);
            color: #eee;
        }
    }


    &[data-position^=top-] {
        top: 0;
    }

    &[data-position^=bottom-] {
        bottom: 0;
    }

    &[data-position$=-left] {
        left: 0;

        .toast {
            transform: translateX(-110%);
            --toast-starts-from: -110%;
        }
    }

    &[data-position$=-right] {
        right: 0;

        .toast {
            transform: translateX();
            --toast-starts-from: 110%;
        }
    }

    &[data-position$=-center] {
        // left: 50%;
        left: 50%;
        transform: translateX(-55.5%);
        // right: 50% // transform: translateX(-50%);
    }

    &[data-position=center] {
        left: 50%;
        bottom: calc(50% - 60px);
        transform: translate(-50%);
    }

    // &[data-position] .toast {
    // transition: transform 3s cubic-bezier(0, -0.25, .88, 1.2)
    // }

    &[data-position] .toast.show {
        animation: show-toast 250ms ease-in-out 2ms 1 forwards;
    }

    &[data-position] .toast.remove {
        animation: remove-toast 250ms ease-in-out 2ms 1 forwards;
    }


}



#composeCreate .input__ {
    cursor: pointer;
    color: rgba($color: black, $alpha: 0.5);
}

#composeCreate .input__:hover {
    box-shadow: 0 0 5px rgba($color: black, $alpha: 0.1);
}

#composeCreate input::placeholder {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}


@keyframes show-toast {
    0% {
        transform: translate(auto);
    }

    100% {
        transform: translate(0, 0);
    }
}

@keyframes remove-toast {
    0% {
        transform: translate(auto);
    }

    100% {
        transform: translate(var(--toast-starts-from));
    }
}